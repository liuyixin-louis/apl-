# all files in shape %04d.jpg
ffmpeg -r 6/1 -i frames/%04d.jpg -c:v libx264 -vf fps=6 -pix_fmt yuv420p out.mp4

# all jpgs
6 fps

ffmpeg -r 6/1 -pattern_type glob -i 'frames/*.jpg' -c:v libx264 -vf fps=6 -pix_fmt yuv420p out.mp4

30 fps
ffmpeg -r 30/1 -pattern_type glob -i 'frames/*.jpg' -c:v libx264 -vf fps=30 -pix_fmt yuv420p out_30fps.mp4

ffmpeg -r 5/1 -pattern_type glob -i 'm7_021_full_frames1min_serversideclient_all/*.jpg' -c:v libx264 -vf fps=5 -pix_fmt yuv420p m7_021_full_frames1min_serversideclient_all.mp4

# no libx264?
ffmpeg -r 30/1 -pattern_type glob -i 'Walking_day_outdoor_3_GTannot/*.jpg' -vf fps=30 -pix_fmt yuv420p annotated_tests_23.mp4


# convert img to the right size - ps put it there in multiple copies, to be properly visible
convert -resize 3840x2160! 0000intro.jpg 0000intro4k.jpg

# merge two videos, multiview: LEFT and RIGHT
ffmpeg \
  -i without.mp4 \
  -i with.mp4 \
  -filter_complex '[0:v]pad=iw*2:ih[int];[int][1:v]overlay=W/2:0[vid]' \
  -map [vid] \
  -c:v libx264 \
  -crf 23 \
  -preset veryfast \
  output.mp4

  # crf = quality, sane range is 18-28. Consider 18 to be visually lossless or nearly so

# Join two videos timewise
ffmpeg -i input1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate1.ts
ffmpeg -i input2.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts intermediate2.ts
ffmpeg -i "concat:intermediate1.ts|intermediate2.ts" -c copy -bsf:a aac_adtstoasc output.mp4
